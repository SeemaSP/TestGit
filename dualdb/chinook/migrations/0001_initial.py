# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-07 08:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(db_column='AlbumId', primary_key=True, serialize=False)),
                ('title', models.CharField(db_column='Title', max_length=160)),
            ],
            options={
                'db_table': 'Album',
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('artistid', models.IntegerField(db_column='ArtistId', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
            ],
            options={
                'db_table': 'Artist',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(db_column='CustomerId', primary_key=True, serialize=False)),
                ('firstname', models.CharField(db_column='FirstName', max_length=40)),
                ('lastname', models.CharField(db_column='LastName', max_length=20)),
                ('company', models.CharField(blank=True, db_column='Company', max_length=80)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=70)),
                ('city', models.CharField(blank=True, db_column='City', max_length=40)),
                ('state', models.CharField(blank=True, db_column='State', max_length=40)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=40)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=10)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=24)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=24)),
                ('email', models.CharField(db_column='Email', max_length=60)),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(db_column='EmployeeId', primary_key=True, serialize=False)),
                ('lastname', models.CharField(db_column='LastName', max_length=20)),
                ('firstname', models.CharField(db_column='FirstName', max_length=20)),
                ('title', models.CharField(blank=True, db_column='Title', max_length=30)),
                ('birthdate', models.DateTimeField(blank=True, db_column='BirthDate', null=True)),
                ('hiredate', models.DateTimeField(blank=True, db_column='HireDate', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=70)),
                ('city', models.CharField(blank=True, db_column='City', max_length=40)),
                ('state', models.CharField(blank=True, db_column='State', max_length=40)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=40)),
                ('postalcode', models.CharField(blank=True, db_column='PostalCode', max_length=10)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=24)),
                ('fax', models.CharField(blank=True, db_column='Fax', max_length=24)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=60)),
                ('reports_to', models.ForeignKey(blank=True, db_column='ReportsTo', null=True, on_delete=django.db.models.deletion.CASCADE, to='chinook.Employee')),
            ],
            options={
                'db_table': 'Employee',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genreid', models.IntegerField(db_column='GenreId', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
            ],
            options={
                'db_table': 'Genre',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(db_column='InvoiceId', primary_key=True, serialize=False)),
                ('invoicedate', models.DateTimeField(db_column='InvoiceDate')),
                ('billingaddress', models.CharField(blank=True, db_column='BillingAddress', max_length=70)),
                ('billingcity', models.CharField(blank=True, db_column='BillingCity', max_length=40)),
                ('billingstate', models.CharField(blank=True, db_column='BillingState', max_length=40)),
                ('billingcountry', models.CharField(blank=True, db_column='BillingCountry', max_length=40)),
                ('billingpostalcode', models.CharField(blank=True, db_column='BillingPostalCode', max_length=10)),
                ('total', models.TextField(db_column='Total')),
                ('customer', models.ForeignKey(db_column='CustomerId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Customer')),
            ],
            options={
                'db_table': 'Invoice',
            },
        ),
        migrations.CreateModel(
            name='Invoiceline',
            fields=[
                ('id', models.AutoField(db_column='InvoiceLineId', primary_key=True, serialize=False)),
                ('unit_price', models.DecimalField(db_column='UnitPrice', decimal_places=2, max_digits=5)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('invoice', models.ForeignKey(db_column='InvoiceId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Invoice')),
            ],
            options={
                'db_table': 'InvoiceLine',
            },
        ),
        migrations.CreateModel(
            name='Mediatype',
            fields=[
                ('mediatypeid', models.IntegerField(db_column='MediaTypeId', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
            ],
            options={
                'db_table': 'MediaType',
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('playlistid', models.IntegerField(db_column='PlaylistId', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
            ],
            options={
                'db_table': 'Playlist',
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('playlist', models.ForeignKey(db_column='PlaylistId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Playlist')),
            ],
            options={
                'db_table': 'PlaylistTrack',
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(db_column='TrackId', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=200)),
                ('composer', models.CharField(blank=True, db_column='Composer', max_length=220)),
                ('milliseconds', models.IntegerField(db_column='Milliseconds')),
                ('bytes', models.IntegerField(blank=True, db_column='Bytes', null=True)),
                ('unit_price', models.DecimalField(db_column='UnitPrice', decimal_places=2, max_digits=5)),
                ('album', models.ForeignKey(blank=True, db_column='AlbumId', null=True, on_delete=django.db.models.deletion.CASCADE, to='chinook.Album')),
                ('genre', models.ForeignKey(blank=True, db_column='GenreId', null=True, on_delete=django.db.models.deletion.CASCADE, to='chinook.Genre')),
                ('mediatype', models.ForeignKey(db_column='MediaTypeId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Mediatype')),
                ('playlist', models.ManyToManyField(through='chinook.PlaylistTrack', to='chinook.Playlist')),
            ],
            options={
                'db_table': 'Track',
            },
        ),
        migrations.AddField(
            model_name='playlisttrack',
            name='track',
            field=models.ForeignKey(db_column='TrackId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Track'),
        ),
        migrations.AddField(
            model_name='invoiceline',
            name='track',
            field=models.ForeignKey(db_column='TrackId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Track'),
        ),
        migrations.AddField(
            model_name='customer',
            name='support_rep',
            field=models.ForeignKey(blank=True, db_column='SupportRepId', null=True, on_delete=django.db.models.deletion.CASCADE, to='chinook.Employee'),
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(db_column='ArtistId', on_delete=django.db.models.deletion.CASCADE, to='chinook.Artist'),
        ),
        migrations.AlterUniqueTogether(
            name='playlisttrack',
            unique_together=set([('playlist', 'track')]),
        ),
    ]
